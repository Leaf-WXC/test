jsx语法总结：
JSX 即 JavaScript XML，是一种在 React 组件内部构建标签的类 XML 语法。
JSX 并不是一门新的语言，仅仅是个语法糖（syntactic sugar），允许开发者在 JavaScript 中书写 HTML 语法。
最后，每个 HTML 标签都转化为 JavaScript 代码来运行。
这样对于使用 JavaScript 来构建组件以及组件之间关系的应用，在代码层面显得更加清晰。
而不再像过于一样用 JavsScript 操作 DOM 来创建组件以及组件之间的嵌套关系。

1.运行环境
JSX必须通过babel翻译为js语言才能运行，而react中含有babel，故必须下载react才能运行JSX。

2.载入方式
1）内联方式载入
<script type="text/babel">
    ReactDOM.render(
      <h1>hello hangge.com</h1>,
      document.getElementById('example')
    );
</script>

2）外联方式载入
即将 JSX 代码单独放在一个.jsx 文件中。
ReactDOM.render(
     <h1>hello hangge.com</h1>,
     document.getElementById('example')
);

然后在页面上通过下面的方式引入这个 .jsx 文件。
<script type="text/babel" src="hello.jsx"></script>

3.标签的使用
我们除了可以在 JavaScript 中书写 HTML 标签外（不需要像以前那样做为字符串用引号引起来）。
还可以使用那些由 ReactJS 创建的组件类标签。
var Hello = React.createClass({
    render: function() {
        return <div>欢迎</div>;
    }
});
ReactDOM.render(
     <Hello />,
     document.getElementById('example')
);
比如上面的代码中，我们创建了一个叫 Hello 的组件，此时我们就可以像使用 HTML 标签一样，通过 <Hello/> 的方式把它引入进来。
注意：ReactJS 中约定自定义的组件标签首字母一定要大写，这样便于区分是组件标签还是 HTML 标签。

4.代码转换
使用 JSX 的书写是为了让我们能更直观地看到组件的 DOM 结果，其最终还是通过解析器转化为 JavaScript 代码才能在浏览器端执行。

5.执行JavaScript表达式
在 JSX 中运行 JavaScript 表达式，需要将表达式用 {} 括起来。
JS常用表达式有如下：
变量名；
函数定义表达式；
属性访问表达式；
函数调用表达式；
算数表达式；
关系表达式；
逻辑表达式；
注意：{}内不能包含if,else语句。常用三目运算符？： 代替。
比如下面我们先定义一个变量，再在 JSX 中调用该变量：
var str = "欢迎访问hangge.com";
var msg = <h1>{str}</h1>;
当标签属性采用js表达式赋值时只对表达式外添加大括号即可，不用再加引号。

6.支持ES6语法

7.显示HTML字符串
有时候我们需要显示一段 HTML 字符串，而不是 HTML 节点。可以这么写：
<div>{'<h1>这个是html字符串</h1>'}</div>
屏幕中会显示：<h1>这个是html字符串</h1>
这种写法叫做模板字符串。

8.样式的使用
（1）JSX 中的样式是通过 style 属性定义的。和传统 Web 定义不同的是，它不再是一个字符串而是一个 JavaScript 对象。
因此对stlye标签属性赋值需要使用两个大括号。第一个大括号表示是 JSX 语法，第二个大括号是 JavaScript 对象。
（2）对于属性名要转为驼峰命名格式，如果不想转的话，则需要加引号括起来。比如：'font-size':'20px'
（3）也可以通过 className='xxx' 的方式引入样式。（切记是 className 而不是 class）

9.事件绑定

1）下面我们通过 JSX 创建一个按钮，并绑定点击事件。点击后，弹出个提示框。
JSX 支持所有的 HTML 元素的事件。但要注意的是，事件名称一定要用驼峰命名方式，如果将 onClick 改成 onclick 就不起作用了。
代码如下：
<div id="example"></div>
 
<script type="text/babel">
  function testClick() {
    alert("点击了按钮!");
  }
 
  var app = <button onClick={testClick.bind(this)} style={{fontSize: '28px'}}>
              按钮
            </button>
 
  ReactDOM.render(
       app,
       document.getElementById('example')
  );
</script>

2）bind 方法第一个参数是用来设置作用域的。如果要给绑定的事件传递参数，可以从 bind 方法第二个参数起放置我们需要传递的参数。
function testClick(value) {
  alert(value);
}
 
var app = <button onClick={testClick.bind(this,'我是参数')} style={{fontSize: '28px'}}>
            按钮
          </button>
 
ReactDOM.render(
     app,
     document.getElementById('example')
);

P.S：HTML中只有input元素含有value属性，表示给input元素设定值，一般会和type属性结合使用。
而name属性类似于id,作为该元素的唯一标识符。